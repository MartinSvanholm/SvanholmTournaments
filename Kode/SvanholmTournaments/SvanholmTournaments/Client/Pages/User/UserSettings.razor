@inject IDialogService DialogService
@inject IAuthenticationService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager navigationManager

<MudContainer Class="mt-5 d-flex flex-column">
    <AuthorizeView>
        <Authorized>
            <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Error" OnClick="(async () => await Logout())">Logout</MudButton>
        </Authorized>
        <NotAuthorized>
            <MudText Class="mx-auto mb-2" Typo="Typo.body1">You are not logged-in click here to login</MudText>
            <MudButton Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" OnClick="(async () => await OpenLoginDialog())">Login</MudButton>
        </NotAuthorized>
</AuthorizeView>
</MudContainer>

@code {
    private async Task OpenLoginDialog()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true, 
                                                               MaxWidth = MaxWidth.Small, 
                                                               FullWidth = true,
                                                               Position = DialogPosition.TopCenter
                                                              };

        var result = await DialogService.Show<LoginDialog>("Login", closeOnEscapeKey).Result;
    }

    private async Task Logout()
    {
        await AuthService.Logout();

        Snackbar.Add("Logout successful", Severity.Success);
        navigationManager.NavigateTo("/");
    }
}